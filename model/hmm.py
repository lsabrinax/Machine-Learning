"""
Author:lixing
Data:2020-5-20
Blog:https://blog.csdn.net/sabrinalx

数据集：人民日报1998年中文标注语料库

------------------------------
运行结果
-----------原文----------------
1.深圳有个打工者阅览室
2.去年１２月，我在广东深圳市出差，听说南山区工商分局为打工者建了个免费图书阅览室，这件新鲜事引起了我的兴趣。
3.１２月１８日下午，我来到了这个阅览室。阅览室位于桂庙，临南油大道，是一间轻体房，面积约有４０平方米，内部装修得整洁干净，四周的书架上摆满了书，并按政治、哲学、法律法规、文化教育、经济、科技、艺术、中国文学、外国文学等分类，屋中央有两排书架，上面也摆满了图书和杂志。\
一些打工青年或站或蹲，认真地阅读，不时有人到借阅台前办理借书或还书手续。南山区在深圳市西边，地处城乡结合部，外来打工者较多。去年２月，南山区工商分局局长王安全发现分局对面的公园里常有不少打工者业余时间闲逛，有时还滋扰生事。\
为了给这些打工者提供一个充实自己的场所，他提议由全分局工作人员捐款，兴建一个免费阅览室。领导带头，群众响应，大家捐款１．４万元，购买了近千册图书。３月６日，建在南头繁华的南新路和金鸡路交叉口的阅览室开放了。
从此，这里每天都吸引了众多借书、看书的人们，其中不仅有打工者，还有机关干部、公司职员和个体户。到了夏天，由于阅览室所在地被工程征用，南山区工商分局便把阅览室迁到了桂庙。阅览室的管理人员是两名青年，男的叫张攀，女的叫赵阳。\
张攀自己就是湖北来的打工者，听说南山区工商分局办免费阅览室，便主动应聘来服务。阅览室每天从早９时开到晚１０时，夜里张攀就住在这里。他谈起阅览室里的图书，翻着一本本的借阅名册，如数家珍，对图书和工作的挚爱之情溢于言表。\
我在这里碰到南山区华英大厦一位叫聂煜的女青年，她说她也是个打工者，由于春节探家回来后就要去市内工作，很留恋这里的这个免费阅览室，想抓紧时间多看些书，她还把自己买的几本杂志捐给了阅览室。\
在阅览室的捐书登记簿上，记录着这样的数字：工商系统内部捐书３５５０册，社会各界捐书２５０册。我在阅览室读到了这样几封感谢信：深圳瑞兴光学厂的王志明写道：“我们这些年轻人远离了家乡，来到繁华紧张的都市打工，辛劳之余，能有机会看书读报，感到特别充实。\
”深圳文光灯泡厂的江虹说：“南山区工商分局的干部职工捐款、捐书，给我们打工者提供良好的学习环境，鼓励我们求知上进，真是办了一件大好事，他们是我们打工者的知音。”（本报记者罗华）
-----------分词----------------
1.深圳|有个|打|工者|阅览室
2.去年|１２月|，|我|在|广东|深圳|市出|差|，|听|说|南山区|工商|分局|为|打|工者|建了|个|免费|图书|阅览室|，|这件|新|鲜事|引起|了|我|的|兴趣|。
3.１２月|１８日|下午|，|我来|到|了|这个|阅览室|。|阅览室|位|于|桂庙|，|临南油|大道|，|是|一间|轻|体房|，|面积|约|有４０平|方米|，|内|部装|修得|整洁|干净|，|四|周|的|书架|上|摆满|了|书|，|并|按|政治|、|哲学|、|法律|法规|、|文化|教育|、|经济|、|科技|、|艺术|、\
|中国|文学|、|外国|文学|等|分类|，|屋|中央|有|两排|书架|，|上面|也|摆满|了|图书|和|杂志|。|一些|打工|青年|或站|或|蹲|，|认真|地阅|读|，|不时|有|人到|借阅|台前|办理|借书|或|还书|手续|。|南山区|在|深圳|市西边|，|地处|城乡|结合部|，|外来|打|工者|较|多|。\
|去年|２月|，|南山区|工商|分局|局长|王|安全|发现|分局|对面|的|公园|里|常有|不少|打|工者|业余|时间|闲逛|，|有时|还|滋扰|生事|。|为|了|给|这些|打|工者|提供|一个|充实|自己|的|场|所|，|他|提议|由|全分局|工作|人员|捐款|，|兴建|一个|免费|阅览室|。\
|领导|带头|，|群众|响应|，|大家|捐款|１．４万|元|，|购买|了|近|千册|图书|。|３月|６日|，|建在|南头|繁华|的|南|新路|和|金鸡路|交叉口|的|阅览室|开放|了|。|从|此|，|这里|每天|都|吸引|了|众多|借书|、|看书|的|人们|，|其中|不仅|有|打|工者|，|还|有|机关|干部|、|公司|职员|和|个|体户|。\
|到|了|夏天|，|由于|阅览室|所|在|地|被|工程|征用|，|南山区|工商|分局|便|把|阅览室|迁到|了|桂庙|。|阅览室|的|管理|人员|是|两|名|青年|，|男|的|叫|张|攀|，|女|的|叫|赵阳|。|张|攀|自己|就|是|湖北来|的|打|工者|，|听|说|南山区|工商|分局|办|免费|阅览室|，|便|主动|应|聘来|服务|。\
|阅览室|每天|从|早９时|开到|晚１０时|，|夜里|张|攀|就|住|在|这里|。|他谈|起|阅览室|里|的|图书|，|翻着|一|本本|的|借阅|名册|，|如数|家珍|，|对|图书|和|工作|的|挚爱|之|情溢|于|言表|。|我|在|这里|碰到|南山区|华英|大厦|一位|叫|聂|煜|的|女|青年|，|她|说|她|也|是|个|打|工者|，\
|由于|春节|探家|回来|后|就|要|去市|内|工作|，|很|留恋|这里|的|这个|免费|阅览室|，|想|抓紧|时间|多|看些|书|，|她|还|把|自己|买|的|几本|杂志|捐给|了|阅览室|。|在|阅览室|的|捐书|登|记簿|上|，|记录|着|这样|的|数字|：|工商|系统|内部|捐书３５５０册|，|社会|各界|捐书２５０册|。\
|我|在|阅览室|读到|了|这样|几|封感|谢信|：|深圳|瑞兴|光学厂|的|王|志明|写道|：|“|我们|这些|年|轻人|远离|了|家乡|，|来|到|繁华紧|张|的|都|市|打工|，|辛劳|之|余|，|能|有|机会|看书|读报|，|感到|特别|充实|。\
|”|深圳|文光|灯|泡厂|的|江虹|说|：|“|南山区|工商|分局|的|干部|职工|捐款|、|捐书|，|给|我们|打|工者|提供|良好|的|学习|环境|，|鼓励|我们|求知|上进|，|真是|办|了|一件|大好|事|，|他们|是|我们|打|工者|的|知音|。|”|（|本报|记者|罗华|）
运行时间：4.3s
"""
import numpy as np
from basemodel import calTime

class HMM(object):
	"""docstring for HMM"""
	def __init__(self, trainfile):
		super(HMM, self).__init__()
		self.trainfile = trainfile
		self.pi, self.A, self.B = self.loadData()

	@calTime
	def loadData(self):
		with open(self.trainfile, 'r', encoding='utf-8') as f:
			lines = f.readlines()

		stateDict = {'B': 0, 'M':1, 'E': 2, 'S':3}

		pi = np.zeros(4) #初始状态概率分布
		A = np.zeros((4, 4))#状态转移概率分布
		B = np.zeros((4, 65536))#观测概率分布


		#利用极大似然估计估计隐马尔可夫模型的参数
		for line in lines:
			words = line.strip().split()
			labels = []
			for i in range(len(words)):
				word_len = len(words[i])
				if word_len == 1: label = 'S'
				else: label = 'B' + 'M' * (word_len-2) + 'E'
				if i == 0: pi[stateDict[label[0]]] += 1
				for j in range(word_len):
					B[stateDict[label[j]]][ord(words[i][j])] += 1
				labels.extend(label)
			for i in range(len(labels)-1):
				A[stateDict[labels[i]]][stateDict[labels[i+1]]] += 1

		pi[pi==0] = 1e-8
		A[A==0] = 1e-8
		B[B==0] = 1e-8
		#这里用概率的对数替换原有的概率，这样在求解最优路径概率相乘的时候可以变为直接相加
		#可以改善由于概率太小累积相乘下溢的情况
		pi = np.log(pi / sum(pi))
		A = np.log(A / np.sum(A, axis=-1, keepdims=True))
		B = np.log(B / np.sum(B, axis=-1, keepdims=True))

		return pi, A, B

	@calTime
	def predict(self, testfile):
		pi, A, B = self.pi, self.A, self.B

		with open(testfile, 'r', encoding='utf-8') as f:
			lines = f.readlines()

		
		for line in lines:
			line = line.strip()
			print('origin line is {}'.format(line))
			lenl = len(line)
			#维特比算法，进行译码
			delta = np.zeros((lenl, 4))
			psi = np.zeros((lenl, 4)).astype('int')
			for i in range(4):
				delta[0][i] = pi[i] + B[i][ord(line[0])]
			for t in range(1, lenl):
				for i in range(4):
					tmpdelta = list(delta[t-1] + A[:,i] + B[i][ord(line[t])])
					delta[t][i] = max(tmpdelta)
					maxindex = tmpdelta.index(delta[t][i]) #到达当前状态的最优路径
					psi[t][i] = maxindex
			predictlabel = []
			iop_t = np.argmax(delta[lenl-1])
			#状态回溯
			predictlabel.append(iop_t)
			for i in range(lenl-1, 0, -1):
				# print(iop_t)
				iop_t = psi[i][iop_t]
				predictlabel.append(iop_t)
			predictlabel.reverse()
			pre_line = ''
			# print(predictlabel)
			for i in range(lenl):
				pre_line += line[i]
				if (predictlabel[i] == 3 or predictlabel[i] == 2) and i != lenl - 1:
					pre_line += '|'
			print('after participling, line is {}'.format(pre_line))


if __name__ == '__main__':
	hmm = HMM('../HMMTrainSet.txt')
	hmm.predict('../HMMTestSet.txt')
	
